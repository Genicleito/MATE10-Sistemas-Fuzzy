seq(1, 2)
seq(1, 5)
A <- c(0.4, 1, 0.6)
B <- c(0.8, 0.4)
(min(1 - A + B), 1)
(min(1 - A + B, 1)
)
min(1 - A + B, 1)
# Exemplo 2.9. Consideramos os subconjuntos fuzzy:
# A = 0.4/x1 + 1.0/x2 + 0.6 /x3
# e
# B = 0.8/y1 + 0.4/y2
A <- c(0.4, 1, 0.6)
B <- c(0.8, 0.4)
lukasiewicz <- function(A, B) {
R <- c()
for (i in seq(1, length(A))) {
for(j in seq(1, length(B)))
c <- c(c, min(1 - A[i] + B[j], 1))
}
return (c)
}
lukasiewicz(A, B)
# Exemplo 2.9. Consideramos os subconjuntos fuzzy:
# A = 0.4/x1 + 1.0/x2 + 0.6 /x3
# e
# B = 0.8/y1 + 0.4/y2
A <- c(0.4, 1, 0.6)
B <- c(0.8, 0.4)
lukasiewicz <- function(A, B) {
R <- c()
for (i in seq(1, length(A))) {
for(j in seq(1, length(B)))
R <- c(R, min(1 - A[i] + B[j], 1))
}
return (R)
}
lukasiewicz(A, B)
setwd('../Documents/GitHub/sistemasFuzzy/Códigos/')
A <- c(0.4, 1, 0.6)
B <- c(0.8, 0.4)
lukasiewicz <- function(A, B) {
R <- c()
for (i in seq(1, length(A))) {
for(j in seq(1, length(B)))
R <- c(R, min(1 - A[i] + B[j], 1))
}
return (R)
}
lukasiewicz(A, B)
c(1:length(10))
c(1:length(10))
c(length(10))
c(1:length(c(1, 2, 3)))
c(1:length(c(2, 3)))
c(1:10)
for(i in c(3, 6, 1)) print(i)
seq(1, length(A))
?max
max(1,2,3,4,5,6,7)
max(seq(1:100))
luka <- lukasiewicz(A, B)
luka
seq(1, 5, 2)
matrix(c(), nrow=length(A), ncol = length(B))
R <- matrix(0:0, nrow=length(A), ncol = length(B))
R
matrix(nrow=length(A), ncol = length(B))
matriz[1,1] = 10
matrix()[1,1] = 10
matrix[1,1] = 10
R <- matrix(0:0, nrow=length(A), ncol = length(B))
R[1,1] = 10
R
R[1, 2] = 20
R
# Exemplo 2.9. Consideramos os subconjuntos fuzzy:
# (A = 0.4/x1 + 1.0/x2 + 0.6/x3) e (B = 0.8/y1 + 0.4/y2)
A <- c(0.4, 1, 0.6)
B <- c(0.8, 0.4)
lukasiewicz <- function(A, B) {
R <- matrix(nrow=length(A), ncol = length(B))
for (i in seq(1, length(A))) {  # (x1, y1), (x1, y2), (x2, y1), (x2, y2), ...
for(j in seq(1, length(B)))
R[i, j] = min(1 - A[i] + B[j], 1)
}
return (R)
}
luka <- lukasiewicz(A, B)
luka
for(i in luka) print(i)
nrow(luka)
c(2)
y[2]
y
y <- c(1:2)
y
y <- c()
y[1] = 10
y[2] = 20
y
# Exemplo 2.9. Consideramos os subconjuntos fuzzy:
# (A = 0.4/x1 + 1.0/x2 + 0.6/x3) e (B = 0.8/y1 + 0.4/y2)
A <- c(0.4, 1, 0.6)
B <- c(0.8, 0.4)
lukasiewicz <- function(A, B) {
R <- matrix(nrow=length(A), ncol = length(B))
for (i in seq(1, length(A))) {  # (x1, y1), (x1, y2), (x2, y1), (x2, y2), ...
for(j in seq(1, length(B)))
R[i, j] = min(1 - A[i] + B[j], 1)
}
return (R)
}
luka <- lukasiewicz(A, B)
# Para a entrada (A = 0.4/x1 + 1.0/x2 + 0.6/x3) tem-se:
#
# = max[ min(1.0; 0.4); min(0.8; 1.0); min(1.0; 0.6) ] = 0.8;
# ( a relação de todo xi com y1 )
#
# max[ min(1.0; 0.4); min(0.4; 1.0); min(0.8; 0.6) ] = 0.6
# ( a relação de todo xi com y2 )
entrada <- c(0.4, 1.0, 0.6)
luka
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in ncol(luka)) {
for(i in nrow(luka)) {
y <- c( y, min(luka[i, j], entrada[i]) )
}
y[j] <- max(y)
}
y
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in ncol(luka)) {
for(i in nrow(luka)) {
y[j] <- c( y[j], min(luka[i, j], entrada[i]) )
}
y[j] <- max(y[j])
}
y
print(y[j])
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in ncol(luka)) {
for(i in nrow(luka)) {
y[j] <- c( y[j], min(luka[i, j], entrada[i]) )
print(y[j])
}
y[j] <- max(y[j])
}
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in ncol(luka)) {
for(i in nrow(luka)) {
y <- c( y, min(luka[i, j], entrada[i]) )
print(y)
}
y[j] <- max(y[j])
}
ncol(luka)
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in ncol(luka)) {
for(i in nrow(luka)) {
y <- c( y, min(luka[i, j], entrada[i]) )
cat("Teste", y)
}
y[j] <- max(y[j])
}
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in ncol(luka)) {
print(j)
for(i in nrow(luka)) {
y <- c( y, min(luka[i, j], entrada[i]) )
print(i)
}
y[j] <- max(y[j])
}
c(1:10)
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y <- c( y, min(luka[i, j], entrada[i]) )
print(i)
}
y[j] <- max(y[j])
}
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y[j] <- c( y[j], min(luka[i, j], entrada[i]) )
}
y[j] <- max(y[j])
}
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y[j] <- c( y[j], min(luka[i, j], entrada[i]) )
cat("Teste", y[j])
}
y[j] <- max(y[j])
}
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y[j] <- c( y[j], min(luka[i, j], entrada[i]) )
cat("Teste", y[j], "\n")
}
y[j] <- max(y[j])
}
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y <- c( y[j], min(luka[i, j], entrada[i]) )
cat("Teste", y, "\n")
}
y[j] <- max(y[j])
}
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y[j] <- c( y[j], min(luka[i, j], entrada[i]) )
cat("Teste", y[j], "\n")
}
y[j] <- max(y[j])
}
luka
c(1:ncol(luka))
c( y[2], min(luka[1, 2], entrada[1])
)
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y[j] <- c( max (y[j], min (luka[i, j], entrada[i]) ) )
cat("Teste", y[j], "\n")
}
y[j] <- max(y[j])
}
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y[j] <- c( max (y[j], min (luka[i, j], entrada[i]) ) )
cat("Teste", y[j], "\n")
}
y[j] <- max(y[j])
y[j + 1] <- c()
}
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y[j] <- c( max (y[j], min (luka[i, j], entrada[i]) ) )
cat("Teste", y[j], "\n")
}
y[j] <- max(y[j])
y[j + 1] <- c()
}
entrada <- c(0.4, 1.0, 0.6)
y <- c()
result <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y <- min (luka[i, j], entrada[i])
cat("Teste", y, "\n")
}
result <- max(y)
}
result
entrada <- c(0.4, 1.0, 0.6)
y <- c()
result <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y <- min (luka[i, j], entrada[i])
cat("Teste", y, "\n")
}
result <- c(result, max(y))
}
result
entrada <- c(0.4, 1.0, 0.6)
y <- c()
result <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y <- min (luka[i, j], entrada[i])
cat("Teste", y, "\n")
}
cat("Terminou")
result <- c(result, max(y))
}
entrada <- c(0.4, 1.0, 0.6)
y <- c()
result <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y <- min (luka[i, j], entrada[i])
cat("Teste", y, "\n")
}
cat("Terminou\n")
result <- c(result, max(y))
}
entrada <- c(0.4, 1.0, 0.6)
y <- c()
result <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y <- min (luka[i, j], entrada[i])
cat("Teste", y, "\n")
}
cat("Terminou\n")
result <- c(result, max(y))
cat("Result: ", result,"\n")
}
entrada <- c(0.4, 1.0, 0.6)
y <- c()
result <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
print(j)
for( i in c(1:nrow(luka)))  {
y <- c( y, min(luka[i, j], entrada[i]) )
}
cat("Terminou\n")
result <- c(result, max(y))
cat("Result: ", result,"\n")
}
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
tmp <- c()
for( i in c(1:nrow(luka)))  {
tmp <- c( tmp, min(luka[i, j], entrada[i]) )
}
cat("Terminou\n")
y <- c(y, max(tmp))
cat("Result: ", y,"\n")
}
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
tmp <- c()
for( i in c(1:nrow(luka)))  {
tmp <- c( tmp, min(luka[i, j], entrada[i]) )
}
y <- c(y, max(tmp))
}
y
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
tmp <- c()
for( i in c(1:nrow(luka)))  {
y[j] <- c( y[j], min(luka[i, j], entrada[i]) )
}
y[j] <- max(y[j])
}
y
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
y[j] <- c()
for( i in c(1:nrow(luka)))  {
y[j] <- c( y[j], min(luka[i, j], entrada[i]) )
}
y[j] <- max(y[j])
}
y
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
y <- c()
for( i in c(1:nrow(luka)))  {
y <- c( y[j], min(luka[i, j], entrada[i]) )
}
y
y
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
y <- c()
for( i in c(1:nrow(luka)))  {
y <- c( y[j], min(luka[i, j], entrada[i]) )
}
y <- max(y)
}
dsgfdg
dfgdsg
fdg
fg
}
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
y <- c()
for( i in c(1:nrow(luka)))  {
y <- c( y[j], min(luka[i, j], entrada[i]) )
}
y <- max(y)
}
y
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
y <- c()
for( i in c(1:nrow(luka)))  {
y <- c( y, min(luka[i, j], entrada[i]) )
}
y <- max(y)
}
y
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
y <- c()
for( i in c(1:nrow(luka)))  {
y <- c( y, min(luka[i, j], entrada[i]) )
}
y[j] <- max(y)
}
y
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
for( i in c(1:nrow(luka)))  {
y <- c( y, min(luka[i, j], entrada[i]) )
}
y[j] <- max(y)
}
y
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
tmp <- c()
for( i in c(1:nrow(luka)))  {
tmp <- c( tmp, min(luka[i, j], entrada[i]) )
}
y <- max(tmp)
}
y
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
tmp <- c()
for( i in c(1:nrow(luka)))  {
tmp <- c( tmp, min(luka[i, j], entrada[i]) )
}
y <- c(tmp, max(tmp) )
}
y
entrada <- c(0.4, 1.0, 0.6)
y <- c()
# Relacionar todo xi da entrada com y1, com y2 ...
for(j in c(1:ncol(luka))) {
tmp <- c()
for( i in c(1:nrow(luka)))  {
tmp <- c( tmp, min(luka[i, j], entrada[i]) )
}
y <- c(y, max(tmp) )
}
y
